// mixins 

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($background, $border) {
  $hover-border: var(--hover-border);
  $active-border: var(--active-border, 12.5%);
  $hover-background: var(--hover-background, 7.5%);

  color: var(--btn-text-color);
  background: $background;
  border-color: $border;

  &:hover{
    background: var(--primary-hover-bg);
    color: var(--primary-hover-color);
    border-color: var(--primary-hover-border-color);
  }

  &:focus,
  &.focus {
    border: var(--primary-focus-border-width) solid var(--primary-focus-border-color);
    border-radius: var(--primary-focus-border-radius);
    box-shadow: 0 0 0 3px $background, 0 0 0 0px #fff;
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: var(--primary-disabled-color);
    background: var(--primary-disabled-bg);
    border-color: var(--primary-disabled-border-color);

    &:focus {
      border-radius: var(--btn-border-radius);
      border: var(--btn-border-width) solid transparent;
      box-shadow: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    color: var(--primary-active-color);
    background: var(--primary-active-bg);
    border-color: var(--primary-active-border-color);

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      border-color: var(--primary-active-border-color);
      border-radius: var(--btn-border-radius);
      border: var(--btn-border-width) solid transparent;
      box-shadow: none;
    }

  }
}

@mixin button-outline-variant($color, $active-background: $color, $active-border: $color) {
  color: var(--secondary-color,$color);
  background-color: transparent;
  background-image: none;
  border-color: $color;
  border-width: var(--secondary-btn-border-width);
  &:hover{
    background: var(--secondary-hover-bg);
    color: var(--secondary-hover-color,$color);
    border-color: var(--secondary-hover-border-color);
  }

  &:focus,
  &.focus {
    border: var(--secondary-focus-border-width) solid var(--secondary-color,$color);
    border-radius: var(--secondary-focus-border-radius);
    box-shadow: 0 0 0 var(--secondary-focus-boxshadow-width) var(--secondary-focus-boxshadow-color), 0 0 0 var(--secondary-focus-boxshadow-width-2) var(--secondary-color,$color);
  }

  &.disabled,
  &:disabled {
    color: var(--secondary-disabled-color);
    background: var(--secondary-disabled-bg);
    border-color: var(--secondary-disabled-border-color);

    &:focus {
      box-shadow: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    color: var(--secondary-active-color);
    background: var(--secondary-active-bg);
    border-color: var(--secondary-active-border-color);
    &:focus {
      box-shadow: none;
    }
  }

}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: var(--btn-border-radius);
}